/*===============================
分割符 /
单星号 *
双星号 **
大括号 {}
中括号 []
小括号 ()
整体和正则的学习曲线差不过
=================================*/

/* =================================
/ 分隔符
通过split("/")得到的数组每一项是片段 */

// src/index.js 有两个片段，分别是 src 和 index.js
// src/**/*.js 有三个片段，分别是 src、** 和 *.js



/*=================================
* 单个星号
用于匹配单个片段中的零个或者多个字符
*/
/* src/*.js 表示 src 目录下所有以 js 结尾的文件，
但是不能匹配 src 子目录中的文件，例如 src/login/login.js 
* 不能匹配分隔符 /，也就是说不能跨片段匹配字符。
*/


/*=================================
** 两个星号
两个**可以跨片段匹配0个或者多个字符，
也就是说**是递归匹配所有文件和目录的
*/
//如果后边又分隔符/的话，即**/的话，则表示只递归匹配所有目录

//  (1)/var/log/** 匹配 /var/log 目录下所有文件和文件夹，
//  以及文件夹里面所有子文件和子文件夹
//  (2)/var/log/**/*.log 匹配 /var/log 及其子目录下的
//  所有以 .log 结尾的文件
//  (3)/home/*/.ssh/**/*.key 匹配所有用户的 .ssh 目录
//  及其子目录内的以 .key 结尾的文件


/*=================================
{} 大括号
匹配大括号内的所有模式，模式之间用逗号进行分隔，支持大括号嵌套，
支持用.. 匹配连续的字符，即{start .. end}语法
*/
/* 
a.{png,jp{,e}g} 匹配 a.png、a.jpg、a.jpeg
{a..c}{1..2} 匹配 a1 a2 b1 b2 c1 c2
*/


/*=================================
[] 中括号
同样用来匹配单个片段中的的单个字符，
但是字符集只能从括号内选择，如果字符集内又-，表示范围
*/
/* 
test/[bc]at.js 只能匹配 test/bat.js 和 test/cat.js
test/[c-f]at.js 
能匹配 test/cat.js、test/dat.js、test/eat.js 和 test/fat.js

*/

/*=================================
() 小括号
小括号必须跟在？、*、+、@、!后边使用
且小括号里边的内容通过|取或，

?(pattern|pattern|pattern)：匹配0次或1次给定的模式
*(pattern|pattern|pattern)：匹配0次或多次给定的模式
+(pattern|pattern|pattern)：匹配1次或多次给定的模式
@(pattern|pattern|pattern)：严格匹配给定的模式
!(pattern|pattern|pattern)：匹配非给定的模式

*/
/* 
test/[bc]at.js 只能匹配 test/bat.js 和 test/cat.js
test/[c-f]at.js 
能匹配 test/cat.js、test/dat.js、test/eat.js 和 test/fat.js

*/


/*=================================
？问号
用于匹配单个片段中的单个字符
*/
/* 
src/index.?? 匹配 src 目录下以 index 打头，
后缀名是两个字符的文件，
例如可以匹配 src/index.js 和 src/index.md，
但不能匹配 src/index.jsx
*/



/*=================================
! 叹号
表示取反，即排除那些去掉惊叹号之后能够匹配到的文件
*/
/* 
test/[bc]at.js 只能匹配 test/bat.js 和 test/cat.js
test/[c-f]at.js 
!test/tmp/**' 排除 test/tmp 目录下的所有目录和文件

*/
